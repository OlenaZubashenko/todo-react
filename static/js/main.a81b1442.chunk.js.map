{"version":3,"sources":["components/todo-list-item/todo-list-item.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/search-panel.js","components/item-status-filter/item-status-filter.js","components/item-add-form/item-add-form.js","index.js"],"names":["TodoListItem","this","props","label","onDeleted","onToggleDone","onToggleImportant","done","important","classNames","className","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","AppHeader","SearchPanel","state","term","onSearchChange","e","target","value","setState","React","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","ItemAddForm","onLabelChange","onSubmit","preventDefault","onItemAdded","onChange","placeholder","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","toDo","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a81b1442.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './todo-list-item.css';\n\nexport default class TodoListItem extends Component {\n\n    render() {\n        const { label,\n            onDeleted,\n            onToggleDone,\n            onToggleImportant,\n            done,\n            important } = this.props;\n\n        let classNames = 'todo-list-item';\n        if (done) {\n            classNames += ' done';\n        }\n\n        if (important) {\n            classNames += ' important';\n        }\n\n        const style = {\n            color: important ? 'blue' : 'black',\n            fontWeight: important ? 'bold' : 'normal'\n        };\n        return (\n            <span className={classNames}>\n                <span\n                    className='todo-list-item-label'\n                    onClick={onToggleDone} >\n                    {label}\n                </span>\n                <div className='todo-list-item-btn-wrapper'>\n                    <button type='button'\n                        className='btn btn-outline-success btn-sm'\n                        onClick={onToggleImportant} >\n                        <i className='fa fa-exclamation' />\n                    </button>\n                    <button type='button'\n                        className='btn btn-outline-danger btn-sm'\n                        onClick={onDeleted} >\n                        <i className='fa fa-trash-o' />\n                    </button>\n                </div>\n            </span>\n        );\n    };\n}\n\n\n","import React from \"react\";\nimport TodoListItem from '../todo-list-item/todo-list-item';\n\nimport './todo-list.css';\n\nconst TodoList = ({ todos, onDeleted, onToggleDone, onToggleImportant }) => {\n\n    const elements = todos.map((item) => {\n\n        const { id, ...itemProps } = item;\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem {...itemProps} \n                onDeleted = {\n                    () => onDeleted (id)\n                } \n                onToggleDone = {\n                    () => onToggleDone (id) \n                } \n                onToggleImportant = {\n                    () => onToggleImportant (id) \n                } \n                    />\n            </li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            {elements}\n        </ul>\n    );\n};\n\nexport default TodoList;\n","import AppHeader from './app-header';\n\nexport default AppHeader;\n","import React from \"react\";\nimport './app-header.css'\n\nconst AppHeader = () => {\n    return (\n        <div className='app-header d-flex'>\n            <h1 >My Todo List</h1>\n        </div>\n    );\n};\n\nexport default AppHeader;\n","import React from \"react\";\nimport './search-panel.css';\n\nexport default class SearchPanel extends React.Component {\n\n        state = {\n                term: ''\n        };\n\n        onSearchChange = (e) => {\n                const term = e.target.value;\n                this.setState({term});\n                this.props.onSearchChange(term);\n        };\n        render() {\n                return (\n                        <input  className='search-input' \n                        className = 'form-control search-input'     \n                        placeholder = 'type for search'\n                        value = {this.state.term}\n                        onChange = {this.onSearchChange}\n                        />\n                )\n        }\n        \n        \n        \n};\n\n\n","import React, { Component } from 'react';\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        { name: 'all', label: 'All' },\n        { name: 'active', label: 'Active' },\n        { name: 'done', label: 'Done' },\n    ]\n\n    render() {\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map(({ name, label }) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n            return (\n                <button type=\"button\"\n                    className={`btn ${clazz}`}\n                    key={name}\n                    onClick={() => onFilterChange (name)} >\n                    {label}\n                </button>\n            );\n        });\n        return (\n            <div className='btn-group'>\n                {buttons}\n            </div>\n        );\n    };\n\n}\n\n\n","import React, {Component} from \"react\";\n\nimport './item-add-form.css';\n\nexport default class ItemAddForm extends Component {\n    \nstate = {\n    label: ''\n}\n\nonLabelChange = (e) => {\n    this.setState({\n        label: e.target.value\n    });\n};\n\nonSubmit = (e) => {\n    e.preventDefault();\n    this.props.onItemAdded(this.state.label);\n    this.setState({\n        label: ''\n    });\n};\n\n    render(){\n        return (\n            <form className = 'item-add-form d-flex' \n            onSubmit = {this.onSubmit}>\n\n                <input type = 'text'\n                className = 'form-control'\n                onChange = {this.onLabelChange}\n                placeholder = 'What needs to be done'\n                value = {this.state.label} />\n                <button className = 'btn btn-outline-secondary add'\n                > \n                Add Item </button>\n            </form>\n        )\n    }\n}\n\n","import React, { Component } from 'react';\nimport ReactDom from 'react-dom';\n\nimport TodoList from './components/todo-list/todo-list';\nimport AppHeader from './components/app-header';\nimport SearchPanel from './components/search-panel/search-panel';\nimport ItemStatusFilter from './components/item-status-filter/item-status-filter';\nimport ItemAddForm from './components/item-add-form/item-add-form';\nimport './index.css'\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink 1 cup of coffee'),\n            this.createTodoItem('Make App'),\n            this.createTodoItem('Have a lunch'),\n        ],\n        term: '',\n        filter: 'all'\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n\n        this.setState(({ todoData }) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n\n            const before = todoData.slice(0, idx);\n            const after = todoData.slice(idx + 1);\n\n            const newArray = [...before, ...after];\n\n            return {\n                todoData: newArray\n            };\n        });\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        this.setState(({ todoData }) => {\n\n            const newArr = [...todoData, newItem];\n            return {\n                todoData: newArr\n            };\n\n        });\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            };\n        })\n    };\n\n    toggleProperty(arr, id, propName) {\n        const idx = arr.findIndex((el) => el.id === id);\n\n        const oldItem = arr[idx];\n        const newItem = {\n            ...oldItem,\n            [propName]: !oldItem[propName]\n        };\n\n        return [\n            ...arr.slice(0, idx),\n            newItem,\n            ...arr.slice(idx + 1)\n        ];\n\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            };\n        });\n    };\n\n    onSearchChange = (term) => {\n        this.setState({ term });\n    };\n\n    \n    onFilterChange = (filter) => {\n        this.setState({ filter });\n    };\n\n    search(items, term) {\n        if (term.length === 0) {\n            return items;\n        }\n        return items.filter((item) => {\n            return item.label\n                .toLowerCase().indexOf(term.toLowerCase()) > -1\n        });\n    }\n\n    filter(items, filter) {\n\n        switch (filter) {\n            case 'all':\n                return items;\n            case 'active':\n                return items.filter((item) => !item.done);\n            case 'done':\n                return items.filter((item) => item.done);\n            default:\n                return items;\n        }\n    }\n\n\n\n    render() {\n        const { todoData, term, filter } = this.state;\n\n        const visibleItems = this.filter(this.search(todoData, term), filter);\n\n        const doneCount = todoData.filter((el) => el.done).length;\n\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className='index'>\n                <AppHeader toDo={todoCount} done={doneCount} />\n                <SearchPanel\n                    onSearchChange={this.onSearchChange} />\n                <ItemStatusFilter\n                    filter={filter}\n                    onFilterChange = {this.onFilterChange}\n                />\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleDone={this.onToggleDone}\n                    onToggleImportant={this.onToggleImportant}\n                />\n                <ItemAddForm onItemAdded={this.addItem} />\n            </div>\n        )\n    }\n\n}\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}